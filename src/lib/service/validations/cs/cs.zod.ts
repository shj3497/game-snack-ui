/**
 * Generated by orval v7.8.0 🍺
 * Do not edit manually.
 * 핀플로우 프로모션: API
 * 핀플로우 프로모션: API 문서
 * OpenAPI spec version: 1.0
 */
import {z as zod} from 'zod';

export const createCSParams = zod.object({
  publicEventId: zod.string(),
});

export const createCSBodyAppIdDefault = 'adforus';
export const createCSBodyClickKeyDefault = 'test-click-key';
export const createCSBodyUserIdDefault = 'adforus-uid';
export const createCSBodyPlatformDefault = 'web';
export const createCSBodyAdidDefault = 'test-adid';
export const createCSBodyIdfaDefault = 'test-idfa';
export const createCSBodyQuestionDefault = '이벤트 응모 문의';
export const createCSBodyEmailDefault = 'youma@mz.co.kr';
export const createCSBodyInquireTypeDefault = 'POINT_INQUIRY';

export const createCSBody = zod
  .object({
    appId: zod.string().describe('앱 ID'),
    clickKey: zod.string().describe('클릭 키'),
    userId: zod
      .string()
      .default(createCSBodyUserIdDefault)
      .describe('매체에서 발급한 사용자 ID'),
    platform: zod
      .string()
      .default(createCSBodyPlatformDefault)
      .describe('디바이스 플랫폼 (android, ios, web, etc)'),
    adid: zod
      .string()
      .default(createCSBodyAdidDefault)
      .describe('광고 ID (android 전용)'),
    idfa: zod
      .string()
      .default(createCSBodyIdfaDefault)
      .describe('IDFA (ios 전용)'),
    question: zod.string().describe('문의 내용'),
    email: zod.string().describe('이메일 주소'),
    inquireType: zod
      .enum(['POINT_INQUIRY', 'AD_PARTICIPATION', 'SERVICE_ISSUE', 'OTHER'])
      .describe(
        '문의 종류 (POINT_INQUIRY, AD_PARTICIPATION, SERVICE_ISSUE, OTHER)',
      ),
    files: zod.array(zod.instanceof(File)).describe('첨부파일'),
  })
  .describe('사용자 CS 요청');
