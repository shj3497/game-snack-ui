/**
 * Generated by orval v7.8.0 🍺
 * Do not edit manually.
 * 핀플로우 프로모션: API
 * 핀플로우 프로모션: API 문서
 * OpenAPI spec version: 1.0
 */
import {z as zod} from 'zod';

/**
 * @summary ROULETTE(룰렛돌리기) 응모 저장
 */
export const saveRouletteMiniGameEntryParams = zod.object({
  publicEventId: zod.string(),
});

export const saveRouletteMiniGameEntryBody = zod
  .object({
    adid: zod.string().optional(),
    idfa: zod.string().optional(),
    platform: zod.string().min(1),
    clickKey: zod.string().min(1),
    userId: zod.string().min(1),
    rate: zod.number().describe('이벤트 응모 데이터: roulette rate'),
  })
  .describe('Roulette 이벤트 응모 저장 요청 DTO');

/**
 * @summary FIND(찾기) 응모 저장
 */
export const saveFindMiniGameEntryParams = zod.object({
  publicEventId: zod.string(),
});

export const saveFindMiniGameEntryBody = zod
  .object({
    adid: zod.string().optional(),
    idfa: zod.string().optional(),
    platform: zod.string().min(1),
    clickKey: zod.string().min(1),
    userId: zod.string().min(1),
    seconds: zod.number(),
    cards: zod.string().describe('이벤트 응모 데이터: card'),
  })
  .describe('Find 이벤트 응모 저장 요청 DTO');

/**
 * @summary DRAW(따라그리기) 응모 저장
 */
export const saveDrawMiniGameEntryParams = zod.object({
  publicEventId: zod.string(),
});

export const saveDrawMiniGameEntryBody = zod
  .object({
    adid: zod.string().optional(),
    idfa: zod.string().optional(),
    platform: zod.string().min(1),
    clickKey: zod.string().min(1),
    userId: zod.string().min(1),
    seconds: zod.number(),
    percent: zod.number().describe('이벤트 응모 데이터: draw percent'),
  })
  .describe('Draw 이벤트 응모 저장 요청 DTO');

/**
 * 작업중..
 * @summary 응모 완료 후 리워드 지급 요청
 */
export const giveRewardParams = zod.object({
  publicEventId: zod.string(),
});

export const giveRewardQueryParams = zod.object({
  clickKey: zod.string().min(1),
  userId: zod.string().min(1),
});

/**
 * @summary CATCH(잡기) 응모 저장
 */
export const saveCatchMiniGameEntryParams = zod.object({
  publicEventId: zod.string(),
});

export const saveCatchMiniGameEntryBody = zod
  .object({
    adid: zod.string().optional(),
    idfa: zod.string().optional(),
    platform: zod.string().min(1),
    clickKey: zod.string().min(1),
    userId: zod.string().min(1),
    seconds: zod.number(),
  })
  .describe('Catch 이벤트 응모 저장 요청 DTO');

/**
 * @summary ROULETTE(룰렛돌리기) 응모 가능 여부 확인
 */
export const checkRouletteEligibilityParams = zod.object({
  publicEventId: zod.string(),
});

export const checkRouletteEligibilityQueryParams = zod.object({
  adid: zod.string().optional(),
  idfa: zod.string().optional(),
  userId: zod.string(),
});

/**
 * @summary FIND(찾기) 응모 가능 여부 확인
 */
export const checkFindEligibilityParams = zod.object({
  publicEventId: zod.string(),
});

export const checkFindEligibilityQueryParams = zod.object({
  adid: zod.string().optional(),
  idfa: zod.string().optional(),
  userId: zod.string(),
});

/**
 * @summary DRAW(따라그리기) 응모 가능 여부 확인
 */
export const checkDrawEligibilityParams = zod.object({
  publicEventId: zod.string(),
});

export const checkDrawEligibilityQueryParams = zod.object({
  adid: zod.string().optional(),
  idfa: zod.string().optional(),
  userId: zod.string(),
});

/**
 * @summary CATCH(잡기) 응모 가능 여부 확인
 */
export const checkCatchEligibilityParams = zod.object({
  publicEventId: zod.string(),
});

export const checkCatchEligibilityQueryParams = zod.object({
  adid: zod.string().optional(),
  idfa: zod.string().optional(),
  userId: zod.string(),
});

/**
 * @summary 앱 별 이벤트에서 등록할 수 있는 광고 지면 목록 조회
 */
export const getEventAdPlacementInfoParams = zod.object({
  publicEventId: zod.string(),
});
